###
#
# Opcodes
# -------
#
# This module wraps the all the opcodes in the opcode database.
#
###
module Opcodes

	def self.opcode_groups
		opcode_hash
	end

	def self.opcode_groups_ary
		groups = {}

		opcode_hash.each_pair { |o, g|
			groups[g] = 1
		}

		groups.keys.sort
	end

	def self.opcodes
		opcode_hash.keys
	end

	def self.opcode_hash
		{
			"\xff\xe4" => "esp => eip",
			"\xff\xd4" => "esp => eip",
			"\x54\xc3" => "esp => eip",
			"\xff\xe5" => "ebp => eip",
			"\xff\xd5" => "ebp => eip",
			"\x55\xc3" => "ebp => eip",
			"\xff\xe0" => "eax => eip",
			"\xff\xd0" => "eax => eip",
			"\x50\xc3" => "eax => eip",
			"\xff\xe3" => "ebx => eip",
			"\xff\xd3" => "ebx => eip",
			"\x53\xc3" => "ebx => eip",
			"\xff\xe1" => "ecx => eip",
			"\xff\xd1" => "ecx => eip",
			"\x51\xc3" => "ecx => eip",
			"\xff\xe2" => "edx => eip",
			"\xff\xd2" => "edx => eip",
			"\x52\xc3" => "edx => eip",
			"\xff\xe6" => "esi => eip",
			"\xff\xd6" => "esi => eip",
			"\x56\xc3" => "esi => eip",
			"\xff\xe7" => "edi => eip",
			"\xff\xd7" => "edi => eip",
			"\x57\xc3" => "edi => eip",
			"\x58\x58\xc3" => "[esp + 8] => eip",
			"\x58\x5b\xc3" => "[esp + 8] => eip",
			"\x58\x59\xc3" => "[esp + 8] => eip",
			"\x58\x5a\xc3" => "[esp + 8] => eip",
			"\x58\x5f\xc3" => "[esp + 8] => eip",
			"\x58\x5e\xc3" => "[esp + 8] => eip",
			"\x58\x5d\xc3" => "[esp + 8] => eip",
			"\x58\x5c\xc3" => "[esp + 8] => eip",
			"\x5b\x58\xc3" => "[esp + 8] => eip",
			"\x5b\x5b\xc3" => "[esp + 8] => eip",
			"\x5b\x59\xc3" => "[esp + 8] => eip",
			"\x5b\x5a\xc3" => "[esp + 8] => eip",
			"\x5b\x5f\xc3" => "[esp + 8] => eip",
			"\x5b\x5e\xc3" => "[esp + 8] => eip",
			"\x5b\x5d\xc3" => "[esp + 8] => eip",
			"\x5b\x5c\xc3" => "[esp + 8] => eip",
			"\x59\x58\xc3" => "[esp + 8] => eip",
			"\x59\x5b\xc3" => "[esp + 8] => eip",
			"\x59\x59\xc3" => "[esp + 8] => eip",
			"\x59\x5a\xc3" => "[esp + 8] => eip",
			"\x59\x5f\xc3" => "[esp + 8] => eip",
			"\x59\x5e\xc3" => "[esp + 8] => eip",
			"\x59\x5d\xc3" => "[esp + 8] => eip",
			"\x59\x5c\xc3" => "[esp + 8] => eip",
			"\x5a\x58\xc3" => "[esp + 8] => eip",
			"\x5a\x5b\xc3" => "[esp + 8] => eip",
			"\x5a\x59\xc3" => "[esp + 8] => eip",
			"\x5a\x5a\xc3" => "[esp + 8] => eip",
			"\x5a\x5f\xc3" => "[esp + 8] => eip",
			"\x5a\x5e\xc3" => "[esp + 8] => eip",
			"\x5a\x5d\xc3" => "[esp + 8] => eip",
			"\x5a\x5c\xc3" => "[esp + 8] => eip",
			"\x5f\x58\xc3" => "[esp + 8] => eip",
			"\x5f\x5b\xc3" => "[esp + 8] => eip",
			"\x5f\x59\xc3" => "[esp + 8] => eip",
			"\x5f\x5a\xc3" => "[esp + 8] => eip",
			"\x5f\x5f\xc3" => "[esp + 8] => eip",
			"\x5f\x5e\xc3" => "[esp + 8] => eip",
			"\x5f\x5d\xc3" => "[esp + 8] => eip",
			"\x5f\x5c\xc3" => "[esp + 8] => eip",
			"\x5e\x58\xc3" => "[esp + 8] => eip",
			"\x5e\x5b\xc3" => "[esp + 8] => eip",
			"\x5e\x59\xc3" => "[esp + 8] => eip",
			"\x5e\x5a\xc3" => "[esp + 8] => eip",
			"\x5e\x5f\xc3" => "[esp + 8] => eip",
			"\x5e\x5e\xc3" => "[esp + 8] => eip",
			"\x5e\x5d\xc3" => "[esp + 8] => eip",
			"\x5e\x5c\xc3" => "[esp + 8] => eip",
			"\x5d\x58\xc3" => "[esp + 8] => eip",
			"\x5d\x5b\xc3" => "[esp + 8] => eip",
			"\x5d\x59\xc3" => "[esp + 8] => eip",
			"\x5d\x5a\xc3" => "[esp + 8] => eip",
			"\x5d\x5f\xc3" => "[esp + 8] => eip",
			"\x5d\x5e\xc3" => "[esp + 8] => eip",
			"\x5d\x5d\xc3" => "[esp + 8] => eip",
			"\x5d\x5c\xc3" => "[esp + 8] => eip",
			"\x5c\x58\xc3" => "[esp + 8] => eip",
			"\x5c\x5b\xc3" => "[esp + 8] => eip",
			"\x5c\x59\xc3" => "[esp + 8] => eip",
			"\x5c\x5a\xc3" => "[esp + 8] => eip",
			"\x5c\x5f\xc3" => "[esp + 8] => eip",
			"\x5c\x5e\xc3" => "[esp + 8] => eip",
			"\x5c\x5d\xc3" => "[esp + 8] => eip",
			"\x5c\x5c\xc3" => "[esp + 8] => eip",
			"\xff\x60\x00" => "[reg + offset] => eip",
			"\xff\x60\x04" => "[reg + offset] => eip",
			"\xff\x60\x08" => "[reg + offset] => eip",
			"\xff\x60\x0c" => "[reg + offset] => eip",
			"\xff\x60\x10" => "[reg + offset] => eip",
			"\xff\x60\x14" => "[reg + offset] => eip",
			"\xff\x60\x18" => "[reg + offset] => eip",
			"\xff\x60\x1c" => "[reg + offset] => eip",
			"\xff\x60\x20" => "[reg + offset] => eip",
			"\xff\x63\x00" => "[reg + offset] => eip",
			"\xff\x63\x04" => "[reg + offset] => eip",
			"\xff\x63\x08" => "[reg + offset] => eip",
			"\xff\x63\x0c" => "[reg + offset] => eip",
			"\xff\x63\x10" => "[reg + offset] => eip",
			"\xff\x63\x14" => "[reg + offset] => eip",
			"\xff\x63\x18" => "[reg + offset] => eip",
			"\xff\x63\x1c" => "[reg + offset] => eip",
			"\xff\x63\x20" => "[reg + offset] => eip",
			"\xff\x61\x00" => "[reg + offset] => eip",
			"\xff\x61\x04" => "[reg + offset] => eip",
			"\xff\x61\x08" => "[reg + offset] => eip",
			"\xff\x61\x0c" => "[reg + offset] => eip",
			"\xff\x61\x10" => "[reg + offset] => eip",
			"\xff\x61\x14" => "[reg + offset] => eip",
			"\xff\x61\x18" => "[reg + offset] => eip",
			"\xff\x61\x1c" => "[reg + offset] => eip",
			"\xff\x61\x20" => "[reg + offset] => eip",
			"\xff\x62\x00" => "[reg + offset] => eip",
			"\xff\x62\x04" => "[reg + offset] => eip",
			"\xff\x62\x08" => "[reg + offset] => eip",
			"\xff\x62\x0c" => "[reg + offset] => eip",
			"\xff\x62\x10" => "[reg + offset] => eip",
			"\xff\x62\x14" => "[reg + offset] => eip",
			"\xff\x62\x18" => "[reg + offset] => eip",
			"\xff\x62\x1c" => "[reg + offset] => eip",
			"\xff\x62\x20" => "[reg + offset] => eip",
			"\xff\x67\x00" => "[reg + offset] => eip",
			"\xff\x67\x04" => "[reg + offset] => eip",
			"\xff\x67\x08" => "[reg + offset] => eip",
			"\xff\x67\x0c" => "[reg + offset] => eip",
			"\xff\x67\x10" => "[reg + offset] => eip",
			"\xff\x67\x14" => "[reg + offset] => eip",
			"\xff\x67\x18" => "[reg + offset] => eip",
			"\xff\x67\x1c" => "[reg + offset] => eip",
			"\xff\x67\x20" => "[reg + offset] => eip",
			"\xff\x66\x00" => "[reg + offset] => eip",
			"\xff\x66\x04" => "[reg + offset] => eip",
			"\xff\x66\x08" => "[reg + offset] => eip",
			"\xff\x66\x0c" => "[reg + offset] => eip",
			"\xff\x66\x10" => "[reg + offset] => eip",
			"\xff\x66\x14" => "[reg + offset] => eip",
			"\xff\x66\x18" => "[reg + offset] => eip",
			"\xff\x66\x1c" => "[reg + offset] => eip",
			"\xff\x66\x20" => "[reg + offset] => eip",
			"\xff\x65\x00" => "[reg + offset] => eip",
			"\xff\x65\x04" => "[reg + offset] => eip",
			"\xff\x65\x08" => "[reg + offset] => eip",
			"\xff\x65\x0c" => "[reg + offset] => eip",
			"\xff\x65\x10" => "[reg + offset] => eip",
			"\xff\x65\x14" => "[reg + offset] => eip",
			"\xff\x65\x18" => "[reg + offset] => eip",
			"\xff\x65\x1c" => "[reg + offset] => eip",
			"\xff\x65\x20" => "[reg + offset] => eip",
			"\xff\x64\x24\x00" => "[reg + offset] => eip",
			"\xff\x64\x24\x04" => "[reg + offset] => eip",
			"\xff\x64\x24\x08" => "[reg + offset] => eip",
			"\xff\x50\x00" => "[reg + offset] => eip",
			"\xff\x50\x04" => "[reg + offset] => eip",
			"\xff\x50\x08" => "[reg + offset] => eip",
			"\xff\x50\x0c" => "[reg + offset] => eip",
			"\xff\x50\x10" => "[reg + offset] => eip",
			"\xff\x50\x14" => "[reg + offset] => eip",
			"\xff\x50\x18" => "[reg + offset] => eip",
			"\xff\x50\x1c" => "[reg + offset] => eip",
			"\xff\x50\x20" => "[reg + offset] => eip",
			"\xff\x53\x00" => "[reg + offset] => eip",
			"\xff\x53\x04" => "[reg + offset] => eip",
			"\xff\x53\x08" => "[reg + offset] => eip",
			"\xff\x53\x0c" => "[reg + offset] => eip",
			"\xff\x53\x10" => "[reg + offset] => eip",
			"\xff\x53\x14" => "[reg + offset] => eip",
			"\xff\x53\x18" => "[reg + offset] => eip",
			"\xff\x53\x1c" => "[reg + offset] => eip",
			"\xff\x53\x20" => "[reg + offset] => eip",
			"\xff\x51\x00" => "[reg + offset] => eip",
			"\xff\x51\x04" => "[reg + offset] => eip",
			"\xff\x51\x08" => "[reg + offset] => eip",
			"\xff\x51\x0c" => "[reg + offset] => eip",
			"\xff\x51\x10" => "[reg + offset] => eip",
			"\xff\x51\x14" => "[reg + offset] => eip",
			"\xff\x51\x18" => "[reg + offset] => eip",
			"\xff\x51\x1c" => "[reg + offset] => eip",
			"\xff\x51\x20" => "[reg + offset] => eip",
			"\xff\x52\x00" => "[reg + offset] => eip",
			"\xff\x52\x04" => "[reg + offset] => eip",
			"\xff\x52\x08" => "[reg + offset] => eip",
			"\xff\x52\x0c" => "[reg + offset] => eip",
			"\xff\x52\x10" => "[reg + offset] => eip",
			"\xff\x52\x14" => "[reg + offset] => eip",
			"\xff\x52\x18" => "[reg + offset] => eip",
			"\xff\x52\x1c" => "[reg + offset] => eip",
			"\xff\x52\x20" => "[reg + offset] => eip",
			"\xff\x57\x00" => "[reg + offset] => eip",
			"\xff\x57\x04" => "[reg + offset] => eip",
			"\xff\x57\x08" => "[reg + offset] => eip",
			"\xff\x57\x0c" => "[reg + offset] => eip",
			"\xff\x57\x10" => "[reg + offset] => eip",
			"\xff\x57\x14" => "[reg + offset] => eip",
			"\xff\x57\x18" => "[reg + offset] => eip",
			"\xff\x57\x1c" => "[reg + offset] => eip",
			"\xff\x57\x20" => "[reg + offset] => eip",
			"\xff\x56\x00" => "[reg + offset] => eip",
			"\xff\x56\x04" => "[reg + offset] => eip",
			"\xff\x56\x08" => "[reg + offset] => eip",
			"\xff\x56\x0c" => "[reg + offset] => eip",
			"\xff\x56\x10" => "[reg + offset] => eip",
			"\xff\x56\x14" => "[reg + offset] => eip",
			"\xff\x56\x18" => "[reg + offset] => eip",
			"\xff\x56\x1c" => "[reg + offset] => eip",
			"\xff\x56\x20" => "[reg + offset] => eip",
			"\xff\x55\x00" => "[reg + offset] => eip",
			"\xff\x55\x04" => "[reg + offset] => eip",
			"\xff\x55\x08" => "[reg + offset] => eip",
			"\xff\x55\x0c" => "[reg + offset] => eip",
			"\xff\x55\x10" => "[reg + offset] => eip",
			"\xff\x55\x14" => "[reg + offset] => eip",
			"\xff\x55\x18" => "[reg + offset] => eip",
			"\xff\x55\x1c" => "[reg + offset] => eip",
			"\xff\x55\x20" => "[reg + offset] => eip",
			"\xff\x54\x24\x00" => "[reg + offset] => eip",
			"\xff\x54\x24\x04" => "[reg + offset] => eip",
			"\xff\x54\x24\x08" => "[reg + offset] => eip",
			"\x66\x61\xc3" => "[esp + 0x10] => eip",
			"\x61\xc3" => "[esp + 0x20] => eip",
			"\xff\x54\x24\x20" => "[reg + offset] => eip",
			"\xff\x54\x24\x0c" => "[reg + offset] => eip",
			"\xff\x54\x24\x10" => "[reg + offset] => eip",
			"\xff\x54\x24\x14" => "[reg + offset] => eip",
			"\xff\x54\x24\x18" => "[reg + offset] => eip",
			"\xff\x54\x24\x1c" => "[reg + offset] => eip",
			"\xff\x64\x24\x20" => "[reg + offset] => eip",
			"\xff\x64\x24\x0c" => "[reg + offset] => eip",
			"\xff\x64\x24\x10" => "[reg + offset] => eip",
			"\xff\x64\x24\x14" => "[reg + offset] => eip",
			"\xff\x64\x24\x18" => "[reg + offset] => eip",
			"\xff\x64\x24\x1c" => "[reg + offset] => eip",
			"\xff\x20" => "[reg] => eip",
			"\xff\x23" => "[reg] => eip",
			"\xff\x21" => "[reg] => eip",
			"\xff\x22" => "[reg] => eip",
			"\xff\x27" => "[reg] => eip",
			"\xff\x26" => "[reg] => eip",
			"\xff\x24\x24" => "[reg] => eip",
			"\xff\x10" => "[reg] => eip",
			"\xff\x13" => "[reg] => eip",
			"\xff\x11" => "[reg] => eip",
			"\xff\x12" => "[reg] => eip",
			"\xff\x17" => "[reg] => eip",
			"\xff\x16" => "[reg] => eip",
			"\xff\x14\x24" => "[reg] => eip",
			"\x58\x58\xc2" => "[esp + 8] => eip",
			"\x58\x5b\xc2" => "[esp + 8] => eip",
			"\x58\x59\xc2" => "[esp + 8] => eip",
			"\x58\x5a\xc2" => "[esp + 8] => eip",
			"\x58\x5f\xc2" => "[esp + 8] => eip",
			"\x58\x5e\xc2" => "[esp + 8] => eip",
			"\x58\x5d\xc2" => "[esp + 8] => eip",
			"\x58\x5c\xc2" => "[esp + 8] => eip",
			"\x5b\x58\xc2" => "[esp + 8] => eip",
			"\x5b\x5b\xc2" => "[esp + 8] => eip",
			"\x5b\x59\xc2" => "[esp + 8] => eip",
			"\x5b\x5a\xc2" => "[esp + 8] => eip",
			"\x5b\x5f\xc2" => "[esp + 8] => eip",
			"\x5b\x5e\xc2" => "[esp + 8] => eip",
			"\x5b\x5d\xc2" => "[esp + 8] => eip",
			"\x5b\x5c\xc2" => "[esp + 8] => eip",
			"\x59\x58\xc2" => "[esp + 8] => eip",
			"\x59\x5b\xc2" => "[esp + 8] => eip",
			"\x59\x59\xc2" => "[esp + 8] => eip",
			"\x59\x5a\xc2" => "[esp + 8] => eip",
			"\x59\x5f\xc2" => "[esp + 8] => eip",
			"\x59\x5e\xc2" => "[esp + 8] => eip",
			"\x59\x5d\xc2" => "[esp + 8] => eip",
			"\x59\x5c\xc2" => "[esp + 8] => eip",
			"\x5a\x58\xc2" => "[esp + 8] => eip",
			"\x5a\x5b\xc2" => "[esp + 8] => eip",
			"\x5a\x59\xc2" => "[esp + 8] => eip",
			"\x5a\x5a\xc2" => "[esp + 8] => eip",
			"\x5a\x5f\xc2" => "[esp + 8] => eip",
			"\x5a\x5e\xc2" => "[esp + 8] => eip",
			"\x5a\x5d\xc2" => "[esp + 8] => eip",
			"\x5a\x5c\xc2" => "[esp + 8] => eip",
			"\x5f\x58\xc2" => "[esp + 8] => eip",
			"\x5f\x5b\xc2" => "[esp + 8] => eip",
			"\x5f\x59\xc2" => "[esp + 8] => eip",
			"\x5f\x5a\xc2" => "[esp + 8] => eip",
			"\x5f\x5f\xc2" => "[esp + 8] => eip",
			"\x5f\x5e\xc2" => "[esp + 8] => eip",
			"\x5f\x5d\xc2" => "[esp + 8] => eip",
			"\x5f\x5c\xc2" => "[esp + 8] => eip",
			"\x5e\x58\xc2" => "[esp + 8] => eip",
			"\x5e\x5b\xc2" => "[esp + 8] => eip",
			"\x5e\x59\xc2" => "[esp + 8] => eip",
			"\x5e\x5a\xc2" => "[esp + 8] => eip",
			"\x5e\x5f\xc2" => "[esp + 8] => eip",
			"\x5e\x5e\xc2" => "[esp + 8] => eip",
			"\x5e\x5d\xc2" => "[esp + 8] => eip",
			"\x5e\x5c\xc2" => "[esp + 8] => eip",
			"\x5d\x58\xc2" => "[esp + 8] => eip",
			"\x5d\x5b\xc2" => "[esp + 8] => eip",
			"\x5d\x59\xc2" => "[esp + 8] => eip",
			"\x5d\x5a\xc2" => "[esp + 8] => eip",
			"\x5d\x5f\xc2" => "[esp + 8] => eip",
			"\x5d\x5e\xc2" => "[esp + 8] => eip",
			"\x5d\x5d\xc2" => "[esp + 8] => eip",
			"\x5d\x5c\xc2" => "[esp + 8] => eip",
			"\x5c\x58\xc2" => "[esp + 8] => eip",
			"\x5c\x5b\xc2" => "[esp + 8] => eip",
			"\x5c\x59\xc2" => "[esp + 8] => eip",
			"\x5c\x5a\xc2" => "[esp + 8] => eip",
			"\x5c\x5f\xc2" => "[esp + 8] => eip",
			"\x5c\x5e\xc2" => "[esp + 8] => eip",
			"\x5c\x5d\xc2" => "[esp + 8] => eip",
			"\x5c\x5c\xc2" => "[esp + 8] => eip",
			"\x50\xc2" => "eax => eip",
			"\x53\xc2" => "ebx => eip",
			"\x51\xc2" => "ecx => eip",
			"\x52\xc2" => "edx => eip",
			"\x57\xc2" => "edi => eip",
			"\x56\xc2" => "esi => eip",
			"\x55\xc2" => "ebp => eip",
			"\x54\xc2" => "esp => eip",
		}
	end

end
